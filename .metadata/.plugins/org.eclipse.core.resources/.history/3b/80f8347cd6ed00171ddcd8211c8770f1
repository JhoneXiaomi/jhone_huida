package com.rbw.mobile.controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.rbw.www.dao.HotBuildingSiteImageMapper;
import com.rbw.www.dao.HotBuildingSiteMapper;
import com.rbw.www.model.HotBuildingSite;
import com.rbw.www.model.HotBuildingSiteImage;
import com.rbw.www.model.HotBuildingSiteImageExample;
import com.rbw.www.model.HotBuildingSiteImageExample.Criteria;


/**
 * 
 * 在建工地逻辑处理类
 * 
 * */
@Controller
public class ConstructionSiteController {

	@Autowired
	HotBuildingSiteMapper hotBuildingSiteMapper;
	@Autowired
	HotBuildingSiteImageMapper hotBuildingSiteImageMapper;
	
	@RequestMapping("workBuildingDetail")
	public ModelAndView workBuildingDetail(@RequestParam("siteId")String siteId,HttpSession session, HttpServletResponse response){
		
		ModelAndView  model = new ModelAndView();
		String branchCompany = (String) session.getAttribute("branchCompany");
		if(StringUtils.isBlank(branchCompany)){
			branchCompany = "bjxz";
		}
		// 获取当前点击的工地的信息
		HotBuildingSite CurrentSite = hotBuildingSiteMapper.selectByPrimaryKey(Integer.valueOf(siteId));
		
		// 获取工地的施工图
		HotBuildingSiteImageExample he =new HotBuildingSiteImageExample();
		Criteria hc = he.createCriteria();
		hc.andSiteIdEqualTo(Integer.valueOf(siteId));
		hc.andImageUrlNotEqualTo("");
		hc.andStatusEqualTo(1);
		he.setOrderByClause("create_time desc");
		List<HotBuildingSiteImage> ShowImageList = hotBuildingSiteImageMapper.selectByExample(he);
		List<HotBuildingSiteImage> showImages = new ArrayList<HotBuildingSiteImage>();
		for(HotBuildingSiteImage image:ShowImageList){
			if(image.getImageUrl() != ""){
				image.setImageUrl(image.getImageUrl().substring(0,27)+"_logo"+CurrentSite.getSiteThumbImg().substring(27,31));
			}
			showImages.add(image);
		}
		
		Integer buildingNum = showImages.size();
		
		// 获取工地的效果图
		HotBuildingSiteImageExample whe =new HotBuildingSiteImageExample();
		whe.or().andSiteIdEqualTo(Integer.valueOf(siteId)).andStatusEqualTo(1).andImageUrlNotEqualTo("").andImageTypeEqualTo("5");
		whe.or().andSiteIdEqualTo(Integer.valueOf(siteId)).andStatusEqualTo(1).andImageUrlNotEqualTo("").andImageTypeEqualTo("6");
		whe.setOrderByClause("create_time desc");
		List<HotBuildingSiteImage> wShowImageList = hotBuildingSiteImageMapper.selectByExample(whe);
		List<HotBuildingSiteImage> wshowImages = new ArrayList<HotBuildingSiteImage>();
		for(HotBuildingSiteImage image:wShowImageList){
			if(image.getImageUrl() != ""){
				image.setImageUrl(image.getImageUrl().substring(0,27)+"_logo"+CurrentSite.getSiteThumbImg().substring(27,31));
			}
			wshowImages.add(image);
		}
		
		
		model.addObject("wshowImages", wshowImages);
		model.addObject("buildingNum", buildingNum);
		model.addObject("CurrentSite", CurrentSite);
		model.addObject("showImages", showImages);
		model.setViewName("/mobile/buildingDetail");
		return model;
	}
}
