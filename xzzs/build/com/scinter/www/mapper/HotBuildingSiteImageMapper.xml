<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scinter.www.dao.HotBuildingSiteImageMapper">
	<resultMap id="BaseResultMap" type="com.scinter.www.model.HotBuildingSiteImage">
		<id column="image_id" property="imageId" jdbcType="INTEGER" />
		<result column="site_id" property="siteId" jdbcType="INTEGER" />
		<result column="image_url" property="imageUrl" jdbcType="VARCHAR" />
		<result column="seq_num" property="seqNum" jdbcType="INTEGER" />
		<result column="image_type" property="imageType" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="creater" property="creater" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		image_id, site_id, image_url, seq_num, image_type, status, create_time, creater
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.scinter.www.model.HotBuildingSiteImageExample">
		select
		<if test="distinct">
			distinct
		</if>
		'false' as QUERYID,
		<include refid="Base_Column_List" />
		from hot_building_site_image
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="page != null">
			limit #{page.begin} , #{page.length}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from hot_building_site_image
		where image_id = #{imageId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from hot_building_site_image
		where image_id = #{imageId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.scinter.www.model.HotBuildingSiteImage"
		useGeneratedKeys="true" keyProperty="imageId">
		insert into hot_building_site_image (image_id, site_id, image_url,
		seq_num, image_type, status,
		create_time, creater)
		values (#{imageId,jdbcType=INTEGER}, #{siteId,jdbcType=INTEGER},
		#{imageUrl,jdbcType=VARCHAR},
		#{seqNum,jdbcType=INTEGER}, #{imageType,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP}, #{creater,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.scinter.www.model.HotBuildingSiteImage">
		insert into hot_building_site_image
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="imageId != null">
				image_id,
			</if>
			<if test="siteId != null">
				site_id,
			</if>
			<if test="imageUrl != null">
				image_url,
			</if>
			<if test="seqNum != null">
				seq_num,
			</if>
			<if test="imageType != null">
				image_type,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="creater != null">
				creater,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="imageId != null">
				#{imageId,jdbcType=INTEGER},
			</if>
			<if test="siteId != null">
				#{siteId,jdbcType=INTEGER},
			</if>
			<if test="imageUrl != null">
				#{imageUrl,jdbcType=VARCHAR},
			</if>
			<if test="seqNum != null">
				#{seqNum,jdbcType=INTEGER},
			</if>
			<if test="imageType != null">
				#{imageType,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creater != null">
				#{creater,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.scinter.www.model.HotBuildingSiteImageExample"
		resultType="java.lang.Integer">
		select count(*) from hot_building_site_image
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByPrimaryKeySelective" parameterType="com.scinter.www.model.HotBuildingSiteImage">
		update hot_building_site_image
		<set>
			<if test="siteId != null">
				site_id = #{siteId,jdbcType=INTEGER},
			</if>
			<if test="imageUrl != null">
				image_url = #{imageUrl,jdbcType=VARCHAR},
			</if>
			<if test="seqNum != null">
				seq_num = #{seqNum,jdbcType=INTEGER},
			</if>
			<if test="imageType != null">
				image_type = #{imageType,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creater != null">
				creater = #{creater,jdbcType=VARCHAR},
			</if>
		</set>
		where image_id = #{imageId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.scinter.www.model.HotBuildingSiteImage">
		update hot_building_site_image
		set site_id = #{siteId,jdbcType=INTEGER},
		image_url = #{imageUrl,jdbcType=VARCHAR},
		seq_num = #{seqNum,jdbcType=INTEGER},
		image_type = #{imageType,jdbcType=VARCHAR},
		status = #{status,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		creater = #{creater,jdbcType=VARCHAR}
		where image_id = #{imageId,jdbcType=INTEGER}
	</update>
</mapper>